#summary About zLayersLib (in Russian)
#labels Phase-Design


= Введение =

Сейчас существует множество замечательных библиотек для обработки данных(в том числе, с помощью нейросетей), но так вышло, что мне они не очень нравится в силу либо излишней усложнённости, либо замкнутости в строгих рамках, которые не позволяют создавать гибкие решения. Поэтому было решено построить простейшую реализацию инфраструктуры удобной для создания систем обработки данных.

Далее постановка задачи и построение архитектуры проекта.
Итак, основные возможности, которыми должен обладать проект:

  * Предоставить возможность реализации произвольного аппарата обработки данных(включая в себя нейронные сети, свертки данных, реализации алгоритмов автоклассификации).
  * Предоставлять максимально простой и удобный интерфейс к расширению базовых классов.
  * Предоставить средства для реализации алгоритмов обработки данных с использованием OpenCL, OpenMP, что не будет проблематичным при выполнении первых двух пунктов.


= Предварительная концепция =

Все составляющие нейронной сети представляют из себя подобие чёрного ящика, значит необходимо выделить некий абстрактный базовый класс, реализующий базовые операции(манипуляции с входным/выходным буфером произвольного типа).

Самые главные моменты:
* модульная реализация
* трёхступеньчатая обработка(Init,Run,Deinit)

Такой подход не даёт практически никаких ограничений. Мы можем создавать сколь угодно сложные проекты.


http://zlayerslib.googlecode.com/svn/wiki/ZLLChart.png


Представим это в контексте нейронной сети.
Существует базовый абстрактный класс, от него мы унаследуем класс абстрактного нейрона, от абстрактного слоя слой нейросети(представляющий из себя умный контейнер для нейронов), от абстрактного вычислителя нейросеть,обеспечивающую взаимодействие слоёв между собой.

http://zlayerslib.googlecode.com/svn/wiki/AbstractLayer.PNG

Готовые реализации слоёв можно комбинировать, создавая сложные системы обработки данных. Независимые слои возможно запускать параллельно с помощью OpenMP(или иных аналогичных механизмов).